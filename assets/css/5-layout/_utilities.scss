// columns breakpoint for very small screens between xs and sm

@media only screen and (min-width: 460px) and (max-width: 635px) {
    @for $i from 1 through $grid-columns {
        .col-xs-#{$i} {
            position: relative;
            width: 100%;
            min-height: 1px; // Prevent columns from collapsing when empty
            padding-right: ($grid-gutter-width / 2);
            padding-left: ($grid-gutter-width / 2);

            
            @include make-col($i);
            
        }
    }
}





// adds a dark transparent background
.darkBG {
    background-color: $rbtv-color-darkBG !important;

    transition: background-color $rbtv-animationDuration;

    @include media-breakpoint-down(sm) {
        background-color: $rbtv-color-dark !important; // on small devices, don't use rgba
    }
}

.brightBG {
    background-color: invert($rbtv-color-darkBG) !important;

    transition: background-color $rbtv-animationDuration;

    @include media-breakpoint-down(sm) {
        background-color: invert($rbtv-color-dark) !important; // on small devices, don't use rgba
    }
}

.stripedBG {
    background: $rbtv-stripedBackground !important;
    background-position: center top;

    &__soft {
        background: $rbtv-stripedBackgroundSoft !important;
        background-position: center top;
    }
}

.roundedBorders {
    border-radius: $rbtv-borderRadius !important;

    @include media-breakpoint-down(sm) {
        border-radius: $rbtv-borderRadius/1.5 !important;
    }

    &.roundedBorders__bottom {
        border-radius: 0 0 $rbtv-borderRadius $rbtv-borderRadius !important;

        @include media-breakpoint-down(sm) {
            border-radius: 0 0 ($rbtv-borderRadius/1.5) ($rbtv-borderRadius/1.5) !important;
        }
    }
    &.roundedBorders__top {
        border-radius: $rbtv-borderRadius $rbtv-borderRadius 0 0 !important;

        @include media-breakpoint-down(sm) {
            border-radius: ($rbtv-borderRadius/1.5) ($rbtv-borderRadius/1.5) 0 0 !important;
        }
    }

    &.roundedBorders__bottom,
    &.roundedBorders__top {
        @include media-breakpoint-down(xs) {
            border-radius: 0 !important;
        }
    }

    &.roundedBorders__small {
        border-radius: $rbtv-borderRadius-small !important;

        @include media-breakpoint-down(xs) {
            border-radius: $rbtv-borderRadius-small !important;
        }

        &.roundedBorders__bottom {
            border-radius: 0 0 $rbtv-borderRadius-small $rbtv-borderRadius-small !important;
        }
        &.roundedBorders__top {
            border-radius: $rbtv-borderRadius-small $rbtv-borderRadius-small 0 0 !important;
        }

        
    }
    &.roundedBorders__pill {
        border-radius: 200px !important;
    }

    @include media-breakpoint-down(xs) {
        border-radius: 0 !important;
    }

    
}


// Placeholder BG for images 

.placeholder-background {
    background: url(../assets/img/SVG/placeholder_16x9.svg) no-repeat center center;
    background-size: cover;
}



// small dot live / new indicator
.live-new-indicator {
    margin-right: $spacer * .3;
    font-size: 1.2em;
    
    display: flex;
    align-items: center;
    line-height: 1;
    // vertical-align: middle;
    cursor: default;

    .rbtv-icon {
        font-size: 1em;
    }


    &__live {
        // color: $rbtv-color-red;
        color: red;
    }
    &__premiere {
        // color: $rbtv-color-blue;
        color: dodgerblue;
    }
    &__interactive {
        color: $rbtv-color-yellow;
    }

    @include media-breakpoint-down(md) {

        margin-right: $spacer * .5;


        @include fontSize($rbtv-fontSize-small);
        padding: $spacer/4 $spacer/3 $spacer/5 $spacer/3;
        border-radius: $spacer;

        &__live,
        &__premiere,
        &__interactive {
            color: $rbtv-color-text-highlight;
        }


        &__live {
            // background-color: $rbtv-color-red;
            background-color: red;
        }
        &__premiere {
            // background-color: $rbtv-color-blue;
            background-color: dodgerblue;
        }
        &__interactive {
            background-color: $rbtv-color-yellow;
        }
    }
}


[hidden] { display: none !important;} // copied here so the angular style will override our CSS

.overflow-hidden {
    overflow: hidden;
}


.flex-one {
    flex: 1;
}

.min-width-zero {
    min-width: 0;
}


.clickable {
    cursor: pointer !important;
}



.portraits-list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    align-items: flex-end;
    justify-content: flex-end;
    width: 100%;
    overflow-x: hidden;

    &__shift {
        > * {    
            @for $i from 1 through 20 {
    
                &:nth-last-child( #{$i} ) {
                    transform: translateX( ( $i - 1) * 33.3333% );
                    // transform: translateX( ( $i - 1) * 10% );
                    z-index: 20 - $i;
                }
            
            }
    
            &:last-of-type {
                transform: none;
            }
        }
    }

    &__hoverEffect {
        li {
            .portrait {
                transform: scale(0.9);
                transition: transform $rbtv-animationDuration/2;
                transform-origin: 50% 100%;
    
                &:hover {
                    transform: scale(1);
                }
            }
        }
    }

    @include media-breakpoint-up(md) {
        &__xl {

            padding-top: $spacer;

            &.portraits-list__shift {
                > * {    
                    @for $i from 1 through 20 {
            
                        &:nth-last-child( #{$i} ) {
                            // transform: translateX( ( $i - 1) * 33.3333% );
                            transform: translateX( ( $i - 1) * 25% );
                        }
                    
                    }
            
                    &:last-of-type {
                        transform: none;
                    }
                }
            }
            &.portraits-list__hoverEffect {
                li {
                    .portrait {
                        transform: scale(1.2);
            
                        &:hover {
                            transform: scale(1.35);
                        }
                    }
                }
            }
        }

        &__xxl {

            padding-top: $spacer*2;

            &.portraits-list__shift {
                > * {    
                    @for $i from 1 through 20 {
            
                        &:nth-last-child( #{$i} ) {
                            // transform: translateX( ( $i - 1) * 33.3333% );
                            // transform: translateX( ( $i - 1) * 10% );
                            transform: translateX( 0 );
                        }
                    
                    }
            
                    &:last-of-type {
                        transform: none;
                    }
                }
            }
            &.portraits-list__hoverEffect {
                li {
                    .portrait {
                        transform: scale(1.2);
            
                        &:hover {
                            transform: scale(1.35);
                        }
                    }
                }
            }
        }
    }

    li {

        display: flex;
        align-items: flex-end;
        

        .portrait {
            display: block;

            display: flex;
            align-items: flex-end;
        }
    }
}


.item-hover-effect {

    // @include media-breakpoint-up(lg) {

        position: relative;

        > * {
            position: relative;
            z-index: 1;
        }

        &::after {
            content: '';
            display: block;
            position: absolute;
            z-index: 0;
            top: -#{$grid-gutter-width/4};
            right: -#{$grid-gutter-width/4};
            bottom: -#{$grid-gutter-width/4};
            left: -#{$grid-gutter-width/4};
            background-color: $rbtv-color-darkgrey;
            opacity: 0;
            transform: scale(0.9);
            transition: opacity ($rbtv-animationDuration / 3), transform ($rbtv-animationDuration/3);
            border-radius: $rbtv-borderRadius-small;

            backface-visibility: hidden; // fix for jittering
        }
    // }

    &:hover,
    &:focus {
        &::after {
            opacity: 1;
            transform: scale(1);
        }
    }

    &.active {
        &::after {
            background-color: $rbtv-color-blue;
            opacity: 1;
            transform: scale(1);
        }
    }

    &__bright {
        &::after {
            background-color: lighten( $rbtv-color-darkgrey, 10% );
        }
    }

    &.no-hover-in-carousel {
        @include media-breakpoint-down(md) {
            &::after {
                display: none;
            }
        }
    }
}

a.link-wrapper {
    &:hover,
    &:focus {
        .item-hover-effect::after {
            opacity: 1;
            transform: scale(1);
        }
    }

    &.active {
        .item-hover-effect::after {
            background-color: $rbtv-color-blue;
            opacity: 1;
            transform: scale(1);
        }
    }
}




/* Simplebar Scrollbar Plugin */

.simplebar-scrollbar {
    background: $rbtv-color-grey;
}



/* Stickies */

.sticky {
    position: sticky;

    &-below-header { 
        // top: calc(50px + (#{$spacer}/2) + #{$rbtv-player-minHeight} + (#{$spacer}*3));
        // top: calc(6rem + #{$rbtv-player-minHeight}); // 4rem Navbar + 0.5rem below livestream + 1.5rem spacing + livestream min-height
        top: calc(60px + 2rem + #{$rbtv-player-minHeight}); // 4rem Navbar + 0.5rem below livestream + 1.5rem spacing + livestream min-height
    }
    &-zero-gap { 
        // top: calc(50px + (#{$spacer}/2) + #{$rbtv-player-minHeight} + (#{$spacer}*3));
        // top: calc(4.5rem + #{$rbtv-player-minHeight}); // 4rem Navbar + 0.5rem below livestream + 1.5rem spacing + livestream min-height
        top: calc(60px + 0.5rem + #{$rbtv-player-minHeight}); // 4rem Navbar + 0.5rem below livestream + 1.5rem spacing + livestream min-height
    }
}

// when Player is microfied, adjust top margin of stickies
.microPlayer {
    .sticky {
        &-below-header {
            top: 8rem;
        }
        &-zero-gap {
            top: 7rem;
        }
    }
}



/* More responsive aspect ratios */

.embed-responsive {

    &-16by5 {
        &::before {
            padding-top: 31.25%;
        }
    }
    &-16by6 {
        &::before {
            padding-top: 37.50%;
        }
    }
    &-16by7 {
        &::before {
            padding-top: 43.75%;
        }
    }
    &-16by8 {
        &::before {
            padding-top: 50%;
        }
    }
    &-2by3 {
        &::before {
            padding-top: (3/2) * 100%;
        }
    }
    &-blogthumb {
        &::before {
            padding-top: (277/400) * 100%;
        }
    }
}


/* Typography */

.text-large {
    @include fontSize(48px);
}


.iconcontainer {
    padding: $spacer/3;
    border-radius: $rbtv-borderRadius-small;
    line-height: 1;

    .rbtv-icon {
        display: block;
    }

    &.inactive {
        background-color: $rbtv-color-grey !important;
        color: #000;
    }
}

/* Text colors */

.color {

    &_google {
        color: $rbtv-color-brand-google;
    }

    &_twitch {
        color: $rbtv-color-brand-twitch;
    }

    &_reddit {
        color: $rbtv-color-brand-reddit;
    }

    &_steam {
        color: $rbtv-color-brand-steam;
    }

}
.bgcolor {

    &_google {
        background-color: $rbtv-color-brand-google;
    }

    &_twitch {
        background-color: $rbtv-color-brand-twitch;
    }

    &_reddit {
        background-color: $rbtv-color-brand-reddit;
    }

    &_steam {
        background-color: $rbtv-color-brand-steam;
    }

}


/** Loading bar with fadeIn **/

ngx-loading-bar {
    .loading-bar {
        animation: fadeIn 1s;
    }
    .loading-bar-spinner {
        left: auto;
        top: $spacer;
        right: $spacer;
    }
}