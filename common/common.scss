

@function calculateRem($size) {
    $remSize: $size / 16px;
    @return #{$remSize}rem;
}

@mixin fontSize($size) {
    font-size: $size; //Fallback in px
    font-size: calculateRem($size);
}



//Custom variables

// Descriptive color variables

// Functional color variables

// Font stacks

// Asset paths

// colors
$rbtv-color-text: #b2b2b2;
$rbtv-color-text-light: #d0d0d0;
$rbtv-color-text-highlight: #fff;
$rbtv-color-text-dark: #222;

// $rbtv-color-yellow: #d89b26; // RBTV Logo yellow
$rbtv-color-yellow: #eb9b00; // RBTV Logo yellow
// $rbtv-color-blue: #3b68a8;
$rbtv-color-blue: #266f9f;
$rbtv-color-blue-light: lighten($rbtv-color-blue, 45%);
$rbtv-color-blue-shade: darken($rbtv-color-blue, 25%);
// $rbtv-color-red: #c0001f; // RBTV Logo red
$rbtv-color-red: #e1001a; // RBTV Logo red

$rbtv-color-green: #00bb00; // RBTV Logo red
$rbtv-color-brightyellow: #ffc001; // RBTV Logo red
$rbtv-color-purple: #a82df2; // RBTV Logo red
$rbtv-color-orange: #ec5300; // RBTV Logo red


// $rbtv-color-lightgrey: #888;
// $rbtv-color-grey: #656566;
// $rbtv-color-darkgrey: #222;
// $rbtv-color-bodybg: #1c1c1c;
// $rbtv-color-darkestgrey: #151515;
// $rbtv-color-dark: #050505;
// $rbtv-color-black: #000;

$rbtv-color-lightgrey: #888;
$rbtv-color-grey: #7a7a7a;
$rbtv-color-darkgrey: #383838;
$rbtv-color-bodybg: #212121;
$rbtv-color-darkestgrey: #252525;
$rbtv-color-dark: #050505;
$rbtv-color-black: #000;

$rbtv-color-darkBG: rgba($rbtv-color-dark, .95);

$rbtv-color-button-default: #e6e6e6;
$rbtv-color-button-secondary: darken($rbtv-color-button-default, 20%);


$rbtv-color-brand-google:#FF0000;
$rbtv-color-brand-twitch:#6441A4;
$rbtv-color-brand-steam:#144f82;
$rbtv-color-brand-reddit:#FF4500;
$rbtv-color-brand-spotify:#1ED760;
$rbtv-color-brand-applepodcasts:#a849dc;





// fonts
$rbtv-font-primary: 'Rubik', 'Roboto', Helvetica, Arial, sans-serif;
$rbtv-font-secondary: 'Arvo-RBTV-v1', 'Roboto', Helvetica, Arial, sans-serif;

$rbtv-fontSize-small: 12px;
$rbtv-fontSize-mediumsmall: 14px;
$rbtv-fontSize-medium: 14px;
$rbtv-fontSize-mediumlarge: 16px;
$rbtv-fontSize-large: 20px;


// border radius
$rbtv-borderRadius: 12px;
$rbtv-borderRadius-small: 5px;


// decorations, background patterns
$rbtv-stripedBackground: repeating-linear-gradient(
    -45deg,
    #161417,
    #161417 12px,
    #0b090b 12px,
    #0b090b 24px
);

$rbtv-stripedBackgroundLarge: repeating-linear-gradient(
    -45deg,
    #161417,
    #161417 36px,
    transparent 36px,
    transparent 72px
);

$rbtv-stripedBackgroundSoft: repeating-linear-gradient(
    -45deg,
    #181619,
    #181619 9px,
    #252326 9px,
    #252326 18px
);

$rbtv-overlay-boxshadow: 0 4px 0 0 rgba($rbtv-color-black, .5);
$rbtv-overlay-expandingboxshadow: 0 2px 0 2px rgba($rbtv-color-black, .4);


// animations, transitions
$rbtv-animationDuration: 0.3s;
$rbtv-easing-ease: cubic-bezier(.75,0,.25,1);
$rbtv-easing-snappy: cubic-bezier(1.000, 0.000, 0.000, 1.000);
$rbtv-easing-hardEaseOut: cubic-bezier(0,1,0,1);
$rbtv-easing-softEaseOut: cubic-bezier(1,0,1,0);

// Variables
//
// Variables should follow the `$component-state-property-size` formula for
// consistent naming. Ex: $nav-link-disabled-color and $modal-content-box-shadow-xs.


//
// Color system
//

// stylelint-disable
$white:    #fff !default;
$gray-100: #f8f9fa !default;
$gray-200: #e9ecef !default;
$gray-300: #dee2e6 !default;
$gray-400: #ced4da !default;
$gray-500: #adb5bd !default;
$gray-600: #868e96 !default;
$gray-700: #495057 !default;
$gray-800: #343a40 !default;
$gray-900: #212529 !default;
$black:    #000 !default;

$grays: () !default;
$grays: map-merge((
  "100": $gray-100,
  "200": $gray-200,
  "300": $gray-300,
  "400": $gray-400,
  "500": $gray-500,
  "600": $gray-600,
  "700": $gray-700,
  "800": $gray-800,
  "900": $gray-900
), $grays);

$blue:    #007bff !default;
$indigo:  #6610f2 !default;
$purple:  #6f42c1 !default;
$pink:    #e83e8c !default;
$red:     #dc3545 !default;
$orange:  #fd7e14 !default;
$yellow:  #ffc107 !default;
$green:   #28a745 !default;
$teal:    #20c997 !default;
$cyan:    #17a2b8 !default;

$colors: () !default;
$colors: map-merge((
  "blue":       $blue,
  "indigo":     $indigo,
  "purple":     $purple,
  "pink":       $pink,
  "red":        $red,
  "orange":     $orange,
  "yellow":     $yellow,
  "green":      $green,
  "teal":       $teal,
  "cyan":       $cyan,
  "white":      $white,
  "gray":       $gray-600,
  "gray-dark":  $gray-800
), $colors);

$primary:       $blue !default;
$secondary:     $gray-600 !default;
$success:       $green !default;
$info:          $cyan !default;
$warning:       $yellow !default;
$danger:        $red !default;
$light:         $gray-100 !default;
$dark:          $gray-800 !default;

$theme-colors: () !default;
$theme-colors: map-merge((
  "primary":    $primary,
  "secondary":  $secondary,
  "success":    $success,
  "info":       $info,
  "warning":    $warning,
  "danger":     $danger,
  "light":      $light,
  "dark":       $dark
), $theme-colors);
// stylelint-enable

// Set a specific jump point for requesting color jumps
$theme-color-interval:      8% !default;


// Options
//
// Quickly modify global styling by enabling or disabling optional features.

$enable-caret:              true !default;
$enable-rounded:            true !default;
$enable-shadows:            false !default;
$enable-gradients:          false !default;
$enable-transitions:        true !default;
$enable-hover-media-query:  false !default;
$enable-grid-classes:       true !default;
$enable-print-styles:       true !default;


// Spacing
//
// Control the default styling of most Bootstrap elements by modifying these
// variables. Mostly focused on spacing.
// You can add more entries to the $spacers map, should you need more variation.

$spacer: 1rem !default;
$spacers: (
  0: 0,
  1: ($spacer * .25),
  2: ($spacer * .5),
  3: $spacer,
  4: ($spacer * 1.5),
  5: ($spacer * 3)
) !default;

// This variable affects the `.h-*` and `.w-*` classes.
$sizes: (
  25: 25%,
  50: 50%,
  75: 75%,
  100: 100%
) !default;

// Body
//
// Settings for the `<body>` element.

$body-bg:                   $white !default;
$body-color:                $gray-900 !default;

// Links
//
// Style anchor elements.

$link-color:                $primary !default;
$link-decoration:           none !default;
$link-hover-color:          darken($link-color, 15%) !default;
$link-hover-decoration:     underline !default;

// Paragraphs
//
// Style p element.

$paragraph-margin-bottom:   1rem !default;


// Grid columns
//
// Set the number of columns and specify the width of the gutters.

$grid-columns:                12 !default;
$grid-gutter-width:           30px !default;

// Components
//
// Define common padding and border radius sizes and more.

$line-height-lg:              1.5 !default;
$line-height-sm:              1.5 !default;

$border-width:                1px !default;
$border-color:                $gray-200 !default;

$border-radius:               .25rem !default;
$border-radius-lg:            .3rem !default;
$border-radius-sm:            .2rem !default;

$component-active-color:      $white !default;
$component-active-bg:         $primary !default;

$caret-width:                 .3em !default;

$transition-base:             all .2s ease-in-out !default;
$transition-fade:             opacity .15s linear !default;
$transition-collapse:         height .35s ease !default;


// stylelint-enable value-keyword-case

$font-size-base:              1rem !default; // Assumes the browser default, typically `16px`
$font-size-lg:                ($font-size-base * 1.25) !default;
$font-size-sm:                ($font-size-base * .875) !default;

$font-weight-light:           300 !default;
$font-weight-normal:          400 !default;
$font-weight-bold:            700 !default;

$font-weight-base:            $font-weight-normal !default;
$line-height-base:            1.5 !default;

$h1-font-size:                $font-size-base * 2.5 !default;
$h2-font-size:                $font-size-base * 2 !default;
$h3-font-size:                $font-size-base * 1.75 !default;
$h4-font-size:                $font-size-base * 1.5 !default;
$h5-font-size:                $font-size-base * 1.25 !default;
$h6-font-size:                $font-size-base !default;

$headings-margin-bottom:      ($spacer / 2) !default;
$headings-font-family:        inherit !default;
$headings-font-weight:        500 !default;
$headings-line-height:        1.2 !default;
$headings-color:              inherit !default;

$display1-size:               6rem !default;
$display2-size:               5.5rem !default;
$display3-size:               4.5rem !default;
$display4-size:               3.5rem !default;

$display1-weight:             300 !default;
$display2-weight:             300 !default;
$display3-weight:             300 !default;
$display4-weight:             300 !default;
$display-line-height:         $headings-line-height !default;

$lead-font-size:              ($font-size-base * 1.25) !default;
$lead-font-weight:            300 !default;

$small-font-size:             80% !default;

$text-muted:                  $gray-600 !default;

$blockquote-small-color:      $gray-600 !default;
$blockquote-font-size:        ($font-size-base * 1.25) !default;

$hr-border-color:             rgba($black,.1) !default;
$hr-border-width:             $border-width !default;

$mark-padding:                .2em !default;

$dt-font-weight:              $font-weight-bold !default;

$kbd-box-shadow:              inset 0 -.1rem 0 rgba($black,.25) !default;
$nested-kbd-font-weight:      $font-weight-bold !default;

$list-inline-padding:         5px !default;

$mark-bg: #fcf8e3 !default;


// Tables
//
// Customizes the `.table` component with basic values, each used across all table variations.

$table-cell-padding:          .75rem !default;
$table-cell-padding-sm:       .3rem !default;

$table-bg:                    transparent !default;
$table-accent-bg:             rgba($black,.05) !default;
$table-hover-bg:              rgba($black,.075) !default;
$table-active-bg:             $table-hover-bg !default;

$table-border-width:          $border-width !default;
$table-border-color:          $gray-200 !default;

$table-head-bg:               $gray-200 !default;
$table-head-color:            $gray-700 !default;

$table-dark-bg:               $gray-900 !default;
$table-dark-accent-bg:        rgba($white, .05) !default;
$table-dark-hover-bg:         rgba($white, .075) !default;
$table-dark-border-color:     lighten($gray-900, 7.5%) !default;
$table-dark-color:            $body-bg !default;


// Buttons
//
// For each of Bootstrap's buttons, define text, background and border color.

$input-btn-padding-y:         .375rem !default;
$input-btn-padding-x:         .75rem !default;
$input-btn-line-height:       $line-height-base !default;

$input-btn-focus-width:       .2rem !default;
$input-btn-focus-color:       rgba($primary, .25) !default;
$input-btn-focus-box-shadow:  0 0 0 $input-btn-focus-width $input-btn-focus-color !default;

$input-btn-padding-y-sm:      .25rem !default;
$input-btn-padding-x-sm:      .5rem !default;
$input-btn-line-height-sm:    $line-height-sm !default;

$input-btn-padding-y-lg:      .5rem !default;
$input-btn-padding-x-lg:      1rem !default;
$input-btn-line-height-lg:    $line-height-lg !default;

$btn-font-weight:             $font-weight-normal !default;
$btn-box-shadow:              inset 0 1px 0 rgba($white,.15), 0 1px 1px rgba($black,.075) !default;
$btn-active-box-shadow:       inset 0 3px 5px rgba($black,.125) !default;

$btn-link-disabled-color:     $gray-600 !default;

$btn-block-spacing-y:         .5rem !default;

// Allows for customizing button radius independently from global border radius
$btn-border-radius:           $border-radius !default;
$btn-border-radius-lg:        $border-radius-lg !default;
$btn-border-radius-sm:        $border-radius-sm !default;

$btn-transition:              background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;


// Forms

$input-bg:                              $white !default;
$input-disabled-bg:                     $gray-200 !default;

$input-color:                           $gray-700 !default;
$input-border-color:                    $gray-400 !default;
$input-btn-border-width:                $border-width !default; // For form controls and buttons
$input-box-shadow:                      inset 0 1px 1px rgba($black,.075) !default;

$input-border-radius:                   $border-radius !default;
$input-border-radius-lg:                $border-radius-lg !default;
$input-border-radius-sm:                $border-radius-sm !default;

$input-focus-bg:                        $input-bg !default;
$input-focus-border-color:              lighten($primary, 25%) !default;
$input-focus-color:                     $input-color !default;

$input-placeholder-color:               $gray-600 !default;

$input-height-border:                   $input-btn-border-width * 2 !default;

$input-height-inner:                    ($font-size-base * $input-btn-line-height) + ($input-btn-padding-y * 2) !default;
$input-height:                          calc(#{$input-height-inner} + #{$input-height-border}) !default;

$input-height-inner-sm:                 ($font-size-sm * $input-btn-line-height-sm) + ($input-btn-padding-y-sm * 2) !default;
$input-height-sm:                       calc(#{$input-height-inner-sm} + #{$input-height-border}) !default;

$input-height-inner-lg:                 ($font-size-lg * $input-btn-line-height-lg) + ($input-btn-padding-y-lg * 2) !default;
$input-height-lg:                       calc(#{$input-height-inner-lg} + #{$input-height-border}) !default;

$input-transition:                      border-color ease-in-out .15s, box-shadow ease-in-out .15s !default;

$form-text-margin-top:                  .25rem !default;

$form-check-margin-bottom:              .5rem !default;
$form-check-input-gutter:               1.25rem !default;
$form-check-input-margin-y:             .25rem !default;
$form-check-input-margin-x:             .25rem !default;

$form-check-inline-margin-x:            .75rem !default;

$form-group-margin-bottom:              1rem !default;

$input-group-addon-color:               $input-color !default;
$input-group-addon-bg:                  $gray-200 !default;
$input-group-addon-border-color:        $input-border-color !default;


// Dropdowns
//
// Dropdown menu container and contents.

$dropdown-min-width:                10rem !default;
$dropdown-padding-y:                .5rem !default;
$dropdown-spacer:                   .125rem !default;
$dropdown-bg:                       $white !default;
$dropdown-border-color:             rgba($black,.15) !default;
$dropdown-border-width:             $border-width !default;
$dropdown-divider-bg:               $gray-200 !default;
$dropdown-box-shadow:               0 .5rem 1rem rgba($black,.175) !default;

$dropdown-link-color:               $gray-900 !default;
$dropdown-link-hover-color:         darken($gray-900, 5%) !default;
$dropdown-link-hover-bg:            $gray-100 !default;

$dropdown-link-active-color:        $component-active-color !default;
$dropdown-link-active-bg:           $component-active-bg !default;

$dropdown-link-disabled-color:      $gray-600 !default;

$dropdown-item-padding-y:           .25rem !default;
$dropdown-item-padding-x:           1.5rem !default;

$dropdown-header-color:             $gray-600 !default;


// Z-index master list
//
// Warning: Avoid customizing these values. They're used for a bird's eye view
// of components dependent on the z-axis and are designed to all work together.

$zindex-dropdown:                   1000 !default;
$zindex-sticky:                     1020 !default;
$zindex-fixed:                      1030 !default;
$zindex-modal-backdrop:             1040 !default;
$zindex-modal:                      1050 !default;
$zindex-popover:                    1060 !default;
$zindex-tooltip:                    1070 !default;

// Navs

$nav-link-padding-y:                .5rem !default;
$nav-link-padding-x:                1rem !default;
$nav-link-disabled-color:           $gray-600 !default;

$nav-tabs-border-color:             #ddd !default;
$nav-tabs-border-width:             $border-width !default;
$nav-tabs-border-radius:            $border-radius !default;
$nav-tabs-link-hover-border-color:  $gray-200 !default;
$nav-tabs-link-active-color:        $gray-700 !default;
$nav-tabs-link-active-bg:           $body-bg !default;
$nav-tabs-link-active-border-color: #ddd !default;

$nav-pills-border-radius:           $border-radius !default;
$nav-pills-link-active-color:       $component-active-color !default;
$nav-pills-link-active-bg:          $component-active-bg !default;

// Navbar

$navbar-padding-y:                  ($spacer / 2) !default;
$navbar-padding-x:                  $spacer !default;

$navbar-brand-font-size:            $font-size-lg !default;
// Compute the navbar-brand padding-y so the navbar-brand will have the same height as navbar-text and nav-link
$nav-link-height:                   ($font-size-base * $line-height-base + $nav-link-padding-y * 2) !default;
$navbar-brand-height:               $navbar-brand-font-size * $line-height-base !default;
$navbar-brand-padding-y:            ($nav-link-height - $navbar-brand-height) / 2 !default;

$navbar-toggler-padding-y:          .25rem !default;
$navbar-toggler-padding-x:          .75rem !default;
$navbar-toggler-font-size:          $font-size-lg !default;
$navbar-toggler-border-radius:      $btn-border-radius !default;

$navbar-dark-color:                 rgba($white,.5) !default;
$navbar-dark-hover-color:           rgba($white,.75) !default;
$navbar-dark-active-color:          $white !default;
$navbar-dark-disabled-color:        rgba($white,.25) !default;
$navbar-dark-toggler-icon-bg:       str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='#{$navbar-dark-color}' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E"), "#", "%23") !default;
$navbar-dark-toggler-border-color:  rgba($white,.1) !default;

$navbar-light-color:                rgba($black,.5) !default;
$navbar-light-hover-color:          rgba($black,.7) !default;
$navbar-light-active-color:         rgba($black,.9) !default;
$navbar-light-disabled-color:       rgba($black,.3) !default;
$navbar-light-toggler-icon-bg:      str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg viewBox='0 0 30 30' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath stroke='#{$navbar-light-color}' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E"), "#", "%23") !default;
$navbar-light-toggler-border-color: rgba($black,.1) !default;

// Pagination

$pagination-padding-y:              .5rem !default;
$pagination-padding-x:              .75rem !default;
$pagination-padding-y-sm:           .25rem !default;
$pagination-padding-x-sm:           .5rem !default;
$pagination-padding-y-lg:           .75rem !default;
$pagination-padding-x-lg:           1.5rem !default;
$pagination-line-height:            1.25 !default;

$pagination-color:                  $link-color !default;
$pagination-bg:                     $white !default;
$pagination-border-width:           $border-width !default;
$pagination-border-color:           #ddd !default;

$pagination-hover-color:            $link-hover-color !default;
$pagination-hover-bg:               $gray-200 !default;
$pagination-hover-border-color:     #ddd !default;

$pagination-active-color:           $white !default;
$pagination-active-bg:              $primary !default;
$pagination-active-border-color:    $primary !default;

$pagination-disabled-color:         $gray-600 !default;
$pagination-disabled-bg:            $white !default;
$pagination-disabled-border-color:  #ddd !default;


// Jumbotron

$jumbotron-padding:                 2rem !default;
$jumbotron-bg:                      $gray-200 !default;


// Cards

$card-spacer-y:                     .75rem !default;
$card-spacer-x:                     1.25rem !default;
$card-border-width:                 $border-width !default;
$card-border-radius:                $border-radius !default;
$card-border-color:                 rgba($black,.125) !default;
$card-inner-border-radius:          calc(#{$card-border-radius} - #{$card-border-width}) !default;
$card-cap-bg:                       rgba($black, .03) !default;
$card-bg:                           $white !default;

$card-img-overlay-padding:          1.25rem !default;

$card-group-margin:                 ($grid-gutter-width / 2) !default;
$card-deck-margin:                  $card-group-margin !default;

$card-columns-count:                3 !default;
$card-columns-gap:                  1.25rem !default;
$card-columns-margin:               $card-spacer-y !default;


// Tooltips

$tooltip-max-width:                 200px !default;
$tooltip-color:                     $white !default;
$tooltip-bg:                        $black !default;
$tooltip-opacity:                   .9 !default;
$tooltip-padding-y:                 3px !default;
$tooltip-padding-x:                 8px !default;
$tooltip-margin:                    0 !default;


$tooltip-arrow-width:               5px !default;
$tooltip-arrow-height:              5px !default;
$tooltip-arrow-color:               $tooltip-bg !default;


// Popovers

$popover-bg:                        $white !default;
$popover-max-width:                 276px !default;
$popover-border-width:              $border-width !default;
$popover-border-color:              rgba($black,.2) !default;
$popover-box-shadow:                0 .25rem .5rem rgba($black,.2) !default;

$popover-header-bg:                 darken($popover-bg, 3%) !default;
$popover-header-color:              $headings-color !default;
$popover-header-padding-y:          .5rem !default;
$popover-header-padding-x:          .75rem !default;

$popover-body-color:                $body-color !default;
$popover-body-padding-y:            $popover-header-padding-y !default;
$popover-body-padding-x:            $popover-header-padding-x !default;

$popover-arrow-width:               .8rem !default;
$popover-arrow-height:              .4rem !default;
$popover-arrow-color:               $popover-bg !default;

$popover-arrow-outer-color:         fade-in($popover-border-color, .05) !default;


// Badges

$badge-font-size:                   75% !default;
$badge-font-weight:                 $font-weight-bold !default;
$badge-padding-y:                   .25em !default;
$badge-padding-x:                   .4em !default;
$badge-border-radius:               $border-radius !default;

$badge-pill-padding-x:              .6em !default;
// Use a higher than normal value to ensure completely rounded edges when
// customizing padding or font-size on labels.
$badge-pill-border-radius:          10rem !default;


// Modals

// Padding applied to the modal body
$modal-inner-padding:               15px !default;

$modal-dialog-margin:               10px !default;
$modal-dialog-margin-y-sm-up:       30px !default;

$modal-title-line-height:           $line-height-base !default;

$modal-content-bg:                  $white !default;
$modal-content-border-color:        rgba($black,.2) !default;
$modal-content-border-width:        $border-width !default;
$modal-content-box-shadow-xs:       0 3px 9px rgba($black,.5) !default;
$modal-content-box-shadow-sm-up:    0 5px 15px rgba($black,.5) !default;

$modal-backdrop-bg:                 $black !default;
$modal-backdrop-opacity:            .5 !default;
$modal-header-border-color:         $gray-200 !default;
$modal-footer-border-color:         $modal-header-border-color !default;
$modal-header-border-width:         $modal-content-border-width !default;
$modal-footer-border-width:         $modal-header-border-width !default;
$modal-header-padding:              15px !default;

$modal-lg:                          800px !default;
$modal-md:                          500px !default;
$modal-sm:                          300px !default;

$modal-transition:                  transform .3s ease-out !default;


// Alerts
//
// Define alert colors, border radius, and padding.

$alert-padding-y:                   .75rem !default;
$alert-padding-x:                   1.25rem !default;
$alert-margin-bottom:               1rem !default;
$alert-border-radius:               $border-radius !default;
$alert-link-font-weight:            $font-weight-bold !default;
$alert-border-width:                $border-width !default;


// Progress bars

$progress-height:                   1rem !default;
$progress-font-size:                ($font-size-base * .75) !default;
$progress-bg:                       $gray-200 !default;
$progress-border-radius:            $border-radius !default;
$progress-box-shadow:               inset 0 .1rem .1rem rgba($black,.1) !default;
$progress-bar-color:                $white !default;
$progress-bar-bg:                   theme-color("primary") !default;
$progress-bar-animation-timing:     1s linear infinite !default;
$progress-bar-transition:           width .6s ease !default;

// List group

$list-group-bg:                     $white !default;
$list-group-border-color:           rgba($black,.125) !default;
$list-group-border-width:           $border-width !default;
$list-group-border-radius:          $border-radius !default;

$list-group-item-padding-y:         .75rem !default;
$list-group-item-padding-x:         1.25rem !default;

$list-group-hover-bg:               $gray-100 !default;
$list-group-active-color:           $component-active-color !default;
$list-group-active-bg:              $component-active-bg !default;
$list-group-active-border-color:    $list-group-active-bg !default;

$list-group-disabled-color:         $gray-600 !default;
$list-group-disabled-bg:            $list-group-bg !default;

$list-group-action-color:           $gray-700 !default;
$list-group-action-hover-color:     $list-group-action-color !default;

$list-group-action-active-color:    $body-color !default;
$list-group-action-active-bg:       $gray-200 !default;


// Image thumbnails

$thumbnail-padding:                 .25rem !default;
$thumbnail-bg:                      $body-bg !default;
$thumbnail-border-width:            $border-width !default;
$thumbnail-border-color:            #ddd !default;
$thumbnail-border-radius:           $border-radius !default;
$thumbnail-box-shadow:              0 1px 2px rgba($black,.075) !default;
$thumbnail-transition:              all .2s ease-in-out !default;


// Figures

$figure-caption-font-size:          90% !default;
$figure-caption-color:              $gray-600 !default;


// Breadcrumbs

$breadcrumb-padding-y:              .75rem !default;
$breadcrumb-padding-x:              1rem !default;
$breadcrumb-item-padding:           .5rem !default;

$breadcrumb-margin-bottom:          1rem !default;

$breadcrumb-bg:                     $gray-200 !default;
$breadcrumb-divider-color:          $gray-600 !default;
$breadcrumb-active-color:           $gray-600 !default;
$breadcrumb-divider:                "/" !default;




// Close

$close-font-size:                   $font-size-base * 1.5 !default;
$close-font-weight:                 $font-weight-bold !default;
$close-color:                       $black !default;
$close-text-shadow:                 0 1px 0 $white !default;

// Code

$code-font-size:                    90% !default;
$code-padding-y:                    .2rem !default;
$code-padding-x:                    .4rem !default;
$code-color:                        #bd4147 !default;
$code-bg:                           $gray-100 !default;

$kbd-color:                         $white !default;
$kbd-bg:                            $gray-900 !default;

$pre-color:                         $gray-900 !default;
$pre-scrollable-max-height:         340px !default;


$red:     #dc3545 !default;
// $orange:  #fd7e14 !default;
// $yellow:  #ffc107 !default;
$green:   #28a745 !default;

$primary:       $rbtv-color-button-default !default;

// // 30px auf jeden bereits draufgerechnet
$grid-breakpoints: (
  xs: 0,
  sm: 636px,
  md: 798px,
  lg: 1052px,
  xl: 1280px
) !default;

// // 30px auf jeden bereits draufgerechnet
$container-max-widths: (
  sm: 600px,
  md: 760px,
  lg: 1000px,
  // lg: 1200px,
  xl: 1200px
) !default;

$grid-gutter-width:           24px !default;
//
$font-size-base:              1rem !default; // Assumes the browser default, typically `16px`
// $font-size-lg:                ($font-size-base * 1.25) !default;
// $font-size-sm:                ($font-size-base * .875) !default;
//
// $font-weight-light:           300 !default;
// $font-weight-normal:          400 !default;
$font-weight-bold:            700 !default;
//
// $font-weight-base:            $font-weight-normal !default;
$line-height-base:            1.5 !default;

$h1-font-size:                $font-size-base * 2.2 !default;
$h2-font-size:                $font-size-base * 1.8 !default;
$h3-font-size:                $font-size-base * 1.6 !default;
$h4-font-size:                $font-size-base * 1.4 !default;
$h5-font-size:                $font-size-base * 1.25 !default;
$h6-font-size:                $font-size-base !default;

$text-muted:                  $rbtv-color-grey !default;

$hr-border-color:             rgba(#fff,.2) !default;

//
// $input-btn-padding-y:         .375rem !default;
$input-btn-padding-y:         .25rem !default;
// $input-btn-padding-x:         .75rem !default;
$input-btn-padding-x:         .5rem !default;

$btn-font-weight:             $font-weight-bold !default;

$btn-border-radius:           0 !default;

$input-bg:                              $rbtv-color-darkgrey !default;
// $input-disabled-bg:                     $gray-200 !default;
$input-disabled-bg:                     $rbtv-color-darkestgrey !default;
//
// $input-color:                           $gray-700 !default;
// $input-border-color:                    $gray-400 !default;
// $input-btn-border-width:                $border-width !default; // For form controls and buttons
$input-btn-border-width:                     0 !default; // For form controls and buttons
// $input-box-shadow:                      inset 0 1px 1px rgba($black,.075) !default;
$input-box-shadow:                      inset 3px 3px 3px rgba(#fff,1) !default;
//
// $input-border-radius:                   $border-radius !default;
// $input-border-radius:                   0 !default;
$input-border-radius:                   $rbtv-borderRadius-small !default;
// $input-border-radius-lg:                $border-radius-lg !default;
// $input-border-radius-sm:                $border-radius-sm !default;
//
$input-focus-bg:                        $rbtv-color-grey !default;
// $input-focus-border-color:              lighten(theme-color("primary"), 25%) !default;
// $input-focus-color:                     $input-color !default;
$input-focus-color:                     $rbtv-color-text-highlight !default;
//
// $input-placeholder-color:               $gray-600 !default;
$input-placeholder-color:               lighten($rbtv-color-grey, 5%) !default;

$custom-control-indicator-checked-color:        $rbtv-color-text-dark !default;

$custom-control-indicator-active-color:         $rbtv-color-text-dark !default;

$tooltip-color:                     $rbtv-color-black !default;
// $tooltip-bg:                        $black !default;
$tooltip-bg:                        $rbtv-color-text-highlight !default;

$list-group-bg:                     $rbtv-color-dark !default;

$list-group-border-radius:          $rbtv-borderRadius-small !default;

$list-group-hover-bg:               $rbtv-color-text-highlight !default;
// $list-group-active-color:           $component-active-color !default;
$list-group-active-color:           $rbtv-color-text-highlight !default;
// $list-group-active-bg:              $component-active-bg !default;
$list-group-active-bg:              $rbtv-color-blue !default;

$list-group-action-color:           $rbtv-color-button-default !default;



// stylelint-disable at-rule-no-vendor-prefix, declaration-no-important, selector-no-qualifying-type, property-no-vendor-prefix

// Reboot
//
// Normalization of HTML elements, manually forked from Normalize.css to remove
// styles targeting irrelevant browsers while applying new styles.
//
// Normalize is licensed MIT. https://github.com/necolas/normalize.css


// Document
//
// 1. Change from `box-sizing: content-box` so that `width` is not affected by `padding` or `border`.
// 2. Change the default font family in all browsers.
// 3. Correct the line height in all browsers.
// 4. Prevent adjustments of font size after orientation changes in IE on Windows Phone and in iOS.
// 5. Setting @viewport causes scrollbars to overlap content in IE11 and Edge, so
//    we force a non-overlapping, non-auto-hiding scrollbar to counteract.
// 6. Change the default tap highlight to be completely transparent in iOS.

*,
*::before,
*::after {
  box-sizing: border-box; // 1
}

html {
  font-family: sans-serif; // 2
  line-height: 1.15; // 3
  -webkit-text-size-adjust: 100%; // 4
  -ms-text-size-adjust: 100%; // 4
  -ms-overflow-style: scrollbar; // 5
  -webkit-tap-highlight-color: rgba($black, 0); // 6
}

// IE10+ doesn't honor `<meta name="viewport">` in some cases.
@at-root {
  @-ms-viewport {
    width: device-width;
  }
}

// stylelint-disable selector-list-comma-newline-after
// Shim for "new" HTML5 structural elements to display correctly (IE10, older browsers)
article, aside, figcaption, figure, footer, header, hgroup, main, nav, section {
  display: block;
}
// stylelint-enable selector-list-comma-newline-after

// Body
//
// 1. Remove the margin in all browsers.
// 2. As a best practice, apply a default `background-color`.
// 3. Set an explicit initial text-align value so that we can later use the
//    the `inherit` value on things like `<th>` elements.

body {
  margin: 0; // 1
  font-size: $font-size-base;
  font-weight: $font-weight-base;
  line-height: $line-height-base;
  color: $body-color;
  text-align: left; // 3
  background-color: $body-bg; // 2
}

// Suppress the focus outline on elements that cannot be accessed via keyboard.
// This prevents an unwanted focus outline from appearing around elements that
// might still respond to pointer events.
//
// Credit: https://github.com/suitcss/base
[tabindex="-1"]:focus {
  outline: 0 !important;
}


// Content grouping
//
// 1. Add the correct box sizing in Firefox.
// 2. Show the overflow in Edge and IE.

hr {
  box-sizing: content-box; // 1
  height: 0; // 1
  overflow: visible; // 2
}


//
// Typography
//

// Remove top margins from headings
//
// By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top
// margin for easier control within type scales as it avoids margin collapsing.
// stylelint-disable selector-list-comma-newline-after
h1, h2, h3, h4, h5, h6 {
  margin-top: 0;
  margin-bottom: $headings-margin-bottom;
}
// stylelint-enable selector-list-comma-newline-after

// Reset margins on paragraphs
//
// Similarly, the top margin on `<p>`s get reset. However, we also reset the
// bottom margin to use `rem` units instead of `em`.
p {
  margin-top: 0;
  margin-bottom: $paragraph-margin-bottom;
}

// Abbreviations
//
// 1. Remove the bottom border in Firefox 39-.
// 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
// 3. Add explicit cursor to indicate changed behavior.
// 4. Duplicate behavior to the data-* attribute for our tooltip plugin

abbr[title],
abbr[data-original-title] { // 4
  text-decoration: underline; // 2
  text-decoration: underline dotted; // 2
  cursor: help; // 3
  border-bottom: 0; // 1
}

address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit;
}

ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1rem;
}

ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0;
}

dt {
  font-weight: $dt-font-weight;
}

dd {
  margin-bottom: .5rem;
  margin-left: 0; // Undo browser default
}

blockquote {
  margin: 0 0 1rem;
}

dfn {
  font-style: italic; // Add the correct font style in Android 4.3-
}

// stylelint-disable font-weight-notation
b,
strong {
  font-weight: bolder; // Add the correct font weight in Chrome, Edge, and Safari
}
// stylelint-enable font-weight-notation

small {
  font-size: 80%; // Add the correct font size in all browsers
}

//
// Prevent `sub` and `sup` elements from affecting the line height in
// all browsers.
//

sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}

sub { bottom: -.25em; }
sup { top: -.5em; }


//
// Links
//

a {
  color: $link-color;
  text-decoration: $link-decoration;
  background-color: transparent; // Remove the gray background on active links in IE 10.
  -webkit-text-decoration-skip: objects; // Remove gaps in links underline in iOS 8+ and Safari 8+.

  &:hover {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
  }
}

// And undo these styles for placeholder links/named anchors (without href)
// which have not been made explicitly keyboard-focusable (without tabindex).
// It would be more straightforward to just use a[href] in previous block, but that
// causes specificity issues in many other styles that are too complex to fix.
// See https://github.com/twbs/bootstrap/issues/19402

a:not([href]):not([tabindex]) {
  color: inherit;
  text-decoration: none;

  &:hover,
  &:focus {
    color: inherit;
    text-decoration: none;
  }

  &:focus {
    outline: 0;
  }
}


//
// Code
//

pre,
code,
kbd,
samp {
  font-size: 1em; // Correct the odd `em` font sizing in all browsers.
}

pre {
  // Remove browser default top margin
  margin-top: 0;
  // Reset browser default of `1em` to use `rem`s
  margin-bottom: 1rem;
  // Don't allow content to break outside
  overflow: auto;
  // We have @viewport set which causes scrollbars to overlap content in IE11 and Edge, so
  // we force a non-overlapping, non-auto-hiding scrollbar to counteract.
  -ms-overflow-style: scrollbar;
}


//
// Figures
//

figure {
  // Apply a consistent margin strategy (matches our type styles).
  margin: 0 0 1rem;
}


//
// Images and content
//

img {
  vertical-align: middle;
  border-style: none; // Remove the border on images inside links in IE 10-.
}

svg {
  // Workaround for the SVG overflow bug in IE10/11 is still required.
  // See https://github.com/twbs/bootstrap/issues/26878
  overflow: hidden;
  vertical-align: middle;
}


//
// Tables
//

table {
  border-collapse: collapse; // Prevent double borders
}

caption {
  padding-top: $table-cell-padding;
  padding-bottom: $table-cell-padding;
  text-align: left;
  caption-side: bottom;
}

th {
  // Matches default `<td>` alignment by inheriting from the `<body>`, or the
  // closest parent with a set `text-align`.
  text-align: inherit;
}


//
// Forms
//

label {
  // Allow labels to use `margin` for spacing.
  display: inline-block;
  margin-bottom: $spacer/2;
}

// Remove the default `border-radius` that macOS Chrome adds.
//
// Details at https://github.com/twbs/bootstrap/issues/24093
button {
  border-radius: 0;
}

// Work around a Firefox/IE bug where the transparent `button` background
// results in a loss of the default `button` focus styles.
//
// Credit: https://github.com/suitcss/base/
button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

input,
button,
select,
optgroup,
textarea {
  margin: 0; // Remove the margin in Firefox and Safari
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

button,
input {
  overflow: visible; // Show the overflow in Edge
}

button,
select {
  text-transform: none; // Remove the inheritance of text transform in Firefox
}

// 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
//    controls in Android 4.
// 2. Correct the inability to style clickable types in iOS and Safari.
button,
html [type="button"], // 1
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; // 2
}

// Remove inner border and padding from Firefox, but don't restore the outline like Normalize.
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

input[type="radio"],
input[type="checkbox"] {
  box-sizing: border-box; // 1. Add the correct box sizing in IE 10-
  padding: 0; // 2. Remove the padding in IE 10-
}


input[type="date"],
input[type="time"],
input[type="datetime-local"],
input[type="month"] {
  // Remove the default appearance of temporal inputs to avoid a Mobile Safari
  // bug where setting a custom line-height prevents text from being vertically
  // centered within the input.
  // See https://bugs.webkit.org/show_bug.cgi?id=139848
  // and https://github.com/twbs/bootstrap/issues/11266
  -webkit-appearance: listbox;
}

textarea {
  overflow: auto; // Remove the default vertical scrollbar in IE.
  // Textareas should really only resize vertically so they don't break their (horizontal) containers.
  resize: vertical;
}

fieldset {
  // Browsers set a default `min-width: min-content;` on fieldsets,
  // unlike e.g. `<div>`s, which have `min-width: 0;` by default.
  // So we reset that to ensure fieldsets behave more like a standard block element.
  // See https://github.com/twbs/bootstrap/issues/12359
  // and https://html.spec.whatwg.org/multipage/#the-fieldset-and-legend-elements
  min-width: 0;
  // Reset the default outline behavior of fieldsets so they don't affect page layout.
  padding: 0;
  margin: 0;
  border: 0;
}

// 1. Correct the text wrapping in Edge and IE.
// 2. Correct the color inheritance from `fieldset` elements in IE.
legend {
  display: block;
  width: 100%;
  max-width: 100%; // 1
  padding: 0;
  margin-bottom: .5rem;
  font-size: 1.5rem;
  line-height: inherit;
  color: inherit; // 2
  white-space: normal; // 1
}

progress {
  vertical-align: baseline; // Add the correct vertical alignment in Chrome, Firefox, and Opera.
}

// Correct the cursor style of increment and decrement buttons in Chrome.
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

[type="search"] {
  // This overrides the extra rounded corners on search inputs in iOS so that our
  // `.form-control` class can properly style them. Note that this cannot simply
  // be added to `.form-control` as it's not specific enough. For details, see
  // https://github.com/twbs/bootstrap/issues/11586.
  outline-offset: -2px; // 2. Correct the outline style in Safari.
  -webkit-appearance: none;
}

//
// Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
//

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

//
// 1. Correct the inability to style clickable types in iOS and Safari.
// 2. Change font properties to `inherit` in Safari.
//

::-webkit-file-upload-button {
  font: inherit; // 2
  -webkit-appearance: button; // 1
}

//
// Correct element displays
//

output {
  display: inline-block;
}

summary {
  display: list-item; // Add the correct display in all browsers
  cursor: pointer;
}

template {
  display: none; // Add the correct display in IE
}

// Always hide an element with the `hidden` HTML attribute (from PureCSS).
// Needed for proper display in IE 10-.
[hidden] {
  display: none !important;
}



$grid-breakpoints: (
	xs: 0,
	sm: 636px,
	md: 798px,
	lg: 1052px,
	xl: 1280px
  ) !default;
  //
  // @include _assert-ascending($grid-breakpoints, "$grid-breakpoints");
  // @include _assert-starts-at-zero($grid-breakpoints);
  //
  //
  // // Grid containers
  // //
  // // Define the maximum width of `.container` for different screen sizes.
  //
  // // 30px auf jeden bereits draufgerechnet
  $container-max-widths: (
	sm: 600px,
	md: 760px,
	lg: 1000px,
	// lg: 1200px,
	xl: 1200px
  ) !default;


// Breakpoint viewport sizes and media queries.
//
// Breakpoints are defined as a map of (name: minimum width), order from small to large:
//
//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)
//
// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.

// Name of the next breakpoint, or null for the last breakpoint.
//
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    md
//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))
//    md
@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
	$n: index($breakpoint-names, $name);
	@return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
  }
  
  // Minimum breakpoint width. Null for the smallest (first) breakpoint.
  //
  //    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
  //    576px
  @function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
	$min: map-get($breakpoints, $name);
	@return if($min != 0, $min, null);
  }
  
  // Maximum breakpoint width. Null for the largest (last) breakpoint.
  // The maximum value is calculated as the minimum of the next one less 0.1.
  //
  //    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
  //    767px
  @function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
	$next: breakpoint-next($name, $breakpoints);
	@return if($next, breakpoint-min($next, $breakpoints) - 1px, null);
  }
  
  // Returns a blank string if smallest breakpoint, otherwise returns the name with a dash infront.
  // Useful for making responsive utilities.
  //
  //    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
  //    ""  (Returns a blank string)
  //    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
  //    "-sm"
  @function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {
	@return if(breakpoint-min($name, $breakpoints) == null, "", "-#{$name}");
  }
  
  // Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
  // Makes the @content apply to the given breakpoint and wider.
  @mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
	$min: breakpoint-min($name, $breakpoints);
	@if $min {
	  @media (min-width: $min) {
		@content;
	  }
	} @else {
	  @content;
	}
  }
  
  // Media of at most the maximum breakpoint width. No query for the largest breakpoint.
  // Makes the @content apply to the given breakpoint and narrower.
  @mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
	$max: breakpoint-max($name, $breakpoints);
	@if $max {
	  @media (max-width: $max) {
		@content;
	  }
	} @else {
	  @content;
	}
  }
  
  // Media that spans multiple breakpoint widths.
  // Makes the @content apply between the min and max breakpoints
  @mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {
	$min: breakpoint-min($lower, $breakpoints);
	$max: breakpoint-max($upper, $breakpoints);
  
	@if $min != null and $max != null {
	  @media (min-width: $min) and (max-width: $max) {
		@content;
	  }
	} @else if $max == null {
	  @include media-breakpoint-up($lower) {
		@content;
	  }
	} @else if $min == null {
	  @include media-breakpoint-down($upper) {
		@content;
	  }
	}
  }
  
  // Media between the breakpoint's minimum and maximum widths.
  // No minimum for the smallest breakpoint, and no maximum for the largest one.
  // Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.
  @mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {
	$min: breakpoint-min($name, $breakpoints);
	$max: breakpoint-max($name, $breakpoints);
  
	@if $min != null and $max != null {
	  @media (min-width: $min) and (max-width: $max) {
		@content;
	  }
	} @else if $max == null {
	  @include media-breakpoint-up($name) {
		@content;
	  }
	} @else if $min == null {
	  @include media-breakpoint-down($name) {
		@content;
	  }
	}
  }

  


  
// Navbar
//
// Provide a static navbar from which we expand to create full-width, fixed, and
// other navbar variations.

.navbar {
    position: relative;
    display: flex;
    flex-wrap: wrap; // allow us to do the line break for collapsing content
    align-items: center;
    justify-content: space-between; // space out brand from logo
    padding: $navbar-padding-y $navbar-padding-x;
  
    // Because flex properties aren't inherited, we need to redeclare these first
    // few properities so that content nested within behave properly.
    > .container,
    > .container-fluid {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
      justify-content: space-between;
    }
  }
  
  
  // Navbar brand
  //
  // Used for brand, project, or site names.
  
  .navbar-brand {
    display: inline-block;
    padding-top: $navbar-brand-padding-y;
    padding-bottom: $navbar-brand-padding-y;
    margin-right: $navbar-padding-x;
    font-size: $navbar-brand-font-size;
    line-height: inherit;
    white-space: nowrap;
  }
  
  
  // Navbar nav
  //
  // Custom navbar navigation (doesn't require `.nav`, but does make use of `.nav-link`).
  
  .navbar-nav {
    display: flex;
    flex-direction: column; // cannot use `inherit` to get the `.navbar`s value
    padding-left: 0;
    margin-bottom: 0;
    list-style: none;
  
    .nav-link {
      padding-right: 0;
      padding-left: 0;
    }
  
    .dropdown-menu {
      position: static;
      float: none;
    }
  }
  
  
  // Navbar text
  //
  //
  
  .navbar-text {
    display: inline-block;
    padding-top: $nav-link-padding-y;
    padding-bottom: $nav-link-padding-y;
  }
  
  
  // Responsive navbar
  //
  // Custom styles for responsive collapsing and toggling of navbar contents.
  // Powered by the collapse Bootstrap JavaScript plugin.
  
  // When collapsed, prevent the toggleable navbar contents from appearing in
  // the default flexbox row orienation. Requires the use of `flex-wrap: wrap`
  // on the `.navbar` parent.
  .navbar-collapse {
    flex-basis: 100%;
    flex-grow: 1;
    // For always expanded or extra full navbars, ensure content aligns itself
    // properly vertically. Can be easily overridden with flex utilities.
    align-items: center;
  }

  
  
  
  // Navbar themes
  //
  // Styles for switching between navbars with light or dark background.

  
  // White links against a dark background
  .navbar-dark {
    .navbar-brand {
      color: $navbar-dark-active-color;
  
      
    }
  
    .navbar-nav {
      .nav-link {
        color: $navbar-dark-color;

  
        &.disabled {
          color: $navbar-dark-disabled-color;
        }
      }
  
      .show > .nav-link,
      .active > .nav-link,
      .nav-link.show,
      .nav-link.active {
        color: $navbar-dark-active-color;
      }
    }
  
    .navbar-toggler {
      color: $navbar-dark-color;
      border-color: $navbar-dark-toggler-border-color;
    }
  
    .navbar-toggler-icon {
      background-image: $navbar-dark-toggler-icon-bg;
    }
  
    .navbar-text {
      color: $navbar-dark-color;
      a {
        color: $navbar-dark-active-color;
  
      }
    }
  }
  


  // Top Navigation

.nav-container {

    // z-index: 1000;

    // @include media-breakpoint-down(sm) {
    //     position: fixed;
    //     top: 0;
    //     left: 0;
    //     right: 0;
    //     z-index: 1000;
    // }

    > .container.darkBG {
        background-color: $rbtv-color-dark !important;
        z-index: 5000;
        position: relative;
    }
}

.navbar {
    margin-left: -#{($grid-gutter-width )};
    margin-right: -#{($grid-gutter-width )};
    padding-left: $grid-gutter-width - 7px;
    padding-right: ($grid-gutter-width );
    padding-top: 0;
    padding-bottom: 0;

    height: 60px; // fixed height so the offcanvas nav can be positioned accordingly

    @include media-breakpoint-down(sm) {
        margin-left: -#{$grid-gutter-width/2};
        margin-right: -#{$grid-gutter-width/2};
        padding-left: #{$grid-gutter-width/2};
        padding-right: #{$grid-gutter-width/2};
        padding-top: $spacer / 2;
        padding-bottom: $spacer / 2; 

        
    }
    

    

    .navbar-brand {
        padding-top: 0;
        padding-bottom: 0;

        @include media-breakpoint-down(lg) {
            margin-right: 0;
        }

        display: block;
        position: relative;

        a {

            &:active {
                transform: scale(0.95);
            }

            width: 54px;
            height: 54px;
            border-radius: 50%;
            overflow: hidden;

            display: flex;
            align-items: center;
            justify-content: center;


            &::after {
                content: '';
                display: block;
                pointer-events: none;
                width: 100%;
                height: 100%;
                border-radius: 50%;
                background-color: $rbtv-color-red;
                position: absolute;
                top: 0;
                left: 0;
                z-index: 2000;
                transform-origin: center center;
                opacity: 0;
            }

            &:hover,
            &:focus {

                &::after {
                    animation-name: expandFade;
                    animation-duration: 1500ms;
                    animation-iteration-count: infinite;
                    animation-direction: normal;
                    animation-timing-function: cubic-bezier(0,.5,.5,1);
                }
            }
        }

    }
    

    .navbar-nav {
        @include fontSize($rbtv-fontSize-medium);

        margin-right: $spacer;

        @include media-breakpoint-down(lg) {
            margin-right: $spacer*2;
        }
        @include media-breakpoint-down(md) {
            margin-right: $spacer;
        }

        .nav-item {

            margin: 0 $spacer/4;

            @include media-breakpoint-down(lg) {
                margin: 0 $spacer/5;
            }
            @include media-breakpoint-down(md) {
                margin: 0 $spacer/6;
            }

            .nav-link {

                font-family: $rbtv-font-secondary;

                padding: ($spacer / 3) ($spacer/2);
                letter-spacing: -0.025em;
                
                color: $rbtv-color-button-default;

                transition: transform ($rbtv-animationDuration / 2), background-color ($rbtv-animationDuration / 2), color ($rbtv-animationDuration / 2);

                @include media-breakpoint-down(lg) {
                    padding: ($spacer / 2);
                }

                border-radius: $rbtv-borderRadius-small;

                > span {
                    white-space: nowrap;
                }

                &:hover,
                &:focus {
                    color: $rbtv-color-black;
                    background-color: $rbtv-color-text-highlight;
                }

                // &:hover,
                
                &.active {
                    color: $rbtv-color-text-highlight;
                    background-color: $rbtv-color-blue;


                    > span {
                        display: block;
                        transform: scale(1.1);
                    }
                }

                &:active {
                    transform: scale(.975);
                    color: $rbtv-color-text-highlight;
                    background-color: $rbtv-color-darkgrey;
                }
            }

            
        }
    }

    .navbar-right {

        .btn-openSearchbar {
            line-height: 1;

        }


    }
}






$spacer: 1rem !default;






@font-face {
    font-family: 'Arvo-RBTV-v1';
    src: url('#{$font-Arvo-eot}');
    src: url('#{$font-Arvo-eot}?#iefix') format('embedded-opentype'),
        url('#{$font-Arvo-woff2}') format('woff2'),
        url('#{$font-Arvo-woff}') format('woff'),
        url('#{$font-Arvo-ttf}') format('truetype');
    font-weight: bold;
    font-style: normal;
    font-display: fallback;
}

@font-face {
    font-family: 'Rubik';
    src: url('#{$font-Rubik-Italic-eot}');
    src: url('#{$font-Rubik-Italic-eot}?#iefix') format('embedded-opentype'),
        url('#{$font-Rubik-Italic-eot}') format('woff2'),
        url('#{$font-Rubik-Italic-eot}') format('woff'),
        url('#{$font-Rubik-Italic-eot}') format('truetype');
    font-weight: normal;
    font-style: italic;
    font-display: swap;
}

@font-face {
    font-family: 'Rubik';
    src: url('#{$font-Rubik-Regular-eot}');
    src: url('#{$font-Rubik-Regular-eot}?#iefix') format('embedded-opentype'),
        url('#{$font-Rubik-Regular-woff2}') format('woff2'),
        url('#{$font-Rubik-Regular-woff}') format('woff'),
        url('#{$font-Rubik-Regular-ttf}') format('truetype');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
}
@font-face {
    font-family: 'Rubik';
    src: url('#{$font-Rubik-Medium-eot}');
    src: url('#{$font-Rubik-Medium-eot}?#iefix') format('embedded-opentype'),
        url('#{$font-Rubik-Medium-woff2}') format('woff2'),
        url('#{$font-Rubik-Medium-woff}') format('woff'),
        url('#{$font-Rubik-Medium-ttf}') format('truetype');
    font-weight: 500;
    font-style: normal;
    font-display: swap;
}
@font-face {
    font-family: 'Rubik';
    src: url('#{$font-Rubik-BoldItalic-eot}');
    src: url('#{$font-Rubik-BoldItalic-eot}?#iefix') format('embedded-opentype'),
        url('#{$font-Rubik-BoldItalic-woff2}') format('woff2'),
        url('#{$font-Rubik-BoldItalic-woff}') format('woff'),
        url('#{$font-Rubik-BoldItalic-ttf}') format('truetype');
    font-weight: bold;
    font-style: italic;
    font-display: swap;
}
@font-face {
    font-family: 'Rubik';
    src: url('#{$font-Rubik-Bold-eot}');
    src: url('#{$font-Rubik-Bold-eot}?#iefix') format('embedded-opentype'),
        url('#{$font-Rubik-Bold-woff2}') format('woff2'),
        url('#{$font-Rubik-Bold-woff}') format('woff'),
        url('#{$font-Rubik-Bold-ttf}') format('truetype');
    font-weight: bold;
    font-style: normal;
    font-display: swap;
}







// AntiAliasing für alles
html, body {
    /* Support for all WebKit browsers. */
    -webkit-font-smoothing: antialiased;
    /* Support for Safari and Chrome. */
    text-rendering: optimizeLegibility;

    /* Support for Firefox. */
    -moz-osx-font-smoothing: grayscale;

    /* Support for IE. */
    font-feature-settings: 'liga';
}

html {
    font-size: 1rem;

    @include media-breakpoint-down(md) {
        font-size: .9rem;
    }
    @include media-breakpoint-down(xs) {
        font-size: .8rem;
    }
}

body {
    background-color: $rbtv-color-bodybg;
    color: $rbtv-color-text;

    font-family: $rbtv-font-primary;
    font-weight: 400;

    // overflow-y: scroll;

    transition: padding ($rbtv-animationDuration) cubic-bezier(0.000, 1.000, 0.000, 1.000);  // for the videoplayer resize events

    // @include media-breakpoint-up(sm) {
        background-image: url($small-bg-image);
        background-repeat: no-repeat;
        background-position: top center;
        background-attachment: fixed;
        background-size: 100% auto;
    // }

    @include media-breakpoint-up(lg) {
        background-image: url($large-bg-image);
    }


    @include media-breakpoint-down(md) {
        padding-bottom: $spacer*4; // because footer moves into offcanvas nav - with this margin the OpenStream-Button doesn't overlay any content
    }

    &.overflow-hidden {
        margin-right: 12px;
    }

}

.custombackground {
    position: fixed;
    z-index: 0;
    background-color: $rbtv-color-yellow;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
}


main {
    margin-top: $spacer;
    position: relative;
    // @include media-breakpoint-down(md) {
    //     margin-top: $spacer;
    // }

    section {
        margin-bottom: $spacer;
    }
}


// Selections
::-moz-selection { background: $rbtv-color-blue; color: $rbtv-color-text-highlight; }
::selection { background: $rbtv-color-blue; color: $rbtv-color-text-highlight; }


// Scrollbars
// ::-webkit-scrollbar-track {
//     background-color: $rbtv-color-black;
// }
// ::-webkit-scrollbar-thumb {
//     background-color: $rbtv-color-darkgrey;
//     border-radius: 6px;
//     border: 2px solid $rbtv-color-black;
//     min-height: 50px;
// }
// ::-webkit-scrollbar {
//     width: 12px;
// }


// Hyperlinks

a,
.link {

    

        cursor: pointer;

        &.link,
        &:link,
        &:visited {
            color: $rbtv-color-button-default;
        }

        &.link-wrapper {
            &:focus {
                text-decoration: none;
            }
        }

        &:hover,
        &:focus {
            color: $rbtv-color-text-highlight;
            text-decoration: underline;
            
            .rbtv-icon {
                text-decoration: none;
            }
        }
        &:focus {
            // outline: 1px dotted rgba($rbtv-color-text, .65);
            // outline-offset: 1px;
            outline: none;
        }
        &:active {
            color: $rbtv-color-yellow;
        }

        &.btn {
            color: initial;
        }

        &.secondary {
            
                color: $rbtv-color-text;
            
            &:hover,
            &:focus {
                color: $rbtv-color-text-highlight;
            }
            &:focus {
                // outline: 1px dotted rgba($rbtv-color-text, .65);
                // outline-offset: 1px;
            }
            &:active {
                color: $rbtv-color-yellow;
            }
        }

    

    &.link-wrapper {
        &:hover {
            text-decoration: none;
        }
    }
}


h1, h2, h3, h4, h5, h6 {
    font-family: $rbtv-font-secondary;
    font-weight: bold;
    color: $rbtv-color-text-highlight;
    margin-bottom: $spacer;

    a:link,
    a:visited {
        color: $rbtv-color-text-highlight;
    }

    .rbtv-icon {
        font-size: inherit;
    }
}


.alert {
    padding: ($spacer*.75) ($spacer*2.5) ($spacer*.75) ($spacer*.75);
}

dt {
    font-weight: 500;
    text-transform: uppercase;
    @include fontSize($rbtv-fontSize-small);
    color: $rbtv-color-grey;
}

dl {
    dd {
        &:last-of-type {
            margin-bottom: 0;
        }
    }
}








// Buttons (and links that look like buttons)



.btn,
.nav-pills > li > a,
.list-controls .combo-box .combo-box-header,
.navbar .navbar-nav .nav-item .nav-link {
    // background-color: transparent;
    // transition: transform ($rbtv-animationDuration / 2), background-color ($rbtv-animationDuration / 2), color ($rbtv-animationDuration / 2),  box-shadow ($rbtv-animationDuration / 2);
    transition: transform ($rbtv-animationDuration / 2), box-shadow ($rbtv-animationDuration / 2);
    font-family: $rbtv-font-secondary;
    border-radius: $rbtv-borderRadius-small;
    overflow: hidden;
    display: inline-flex;
    text-align: center;
    align-items: center;
    white-space: normal;
    flex-shrink: 0;
    backface-visibility: hidden;
    line-height: 1;

    padding: ($input-btn-padding-y) ($input-btn-padding-x);
        
    @include media-breakpoint-down(sm) {
        padding: ($input-btn-padding-y*1.5) ($input-btn-padding-x*1.5);
    }

    &:not([disabled]):not(.disabled):not(.swiper-button-disabled) {

        cursor: pointer;

        &:focus {
            // outline: 1px dotted rgba($rbtv-color-text, .65);
            // outline-offset: 1px;
        }
    }

    &.disabled,
    &:disabled,
    &.swiper-button-disabled {
        opacity: .5;
    }


    &-lg {
        @include fontSize($rbtv-fontSize-mediumlarge);

        // @include media-breakpoint-down(sm) {
        //     @include fontSize($rbtv-fontSize-medium);
        // }
    }

    &:hover {
        text-decoration: none;
    }
    
    &.btn-primary {

        // line-height: 1;
        background-color: $rbtv-color-button-default;
        // padding: ($input-btn-padding-y*1.5) ($input-btn-padding-x*1.5);
        
        // @include media-breakpoint-down(sm) {
        //     padding: ($input-btn-padding-y*2) ($input-btn-padding-x*2);
        // }

        &:active,
        &.active,
        &:focus,
        &.focus {
            box-shadow: none !important;
        }

        &:not([disabled]):not(.disabled):not(.swiper-button-disabled) {

            &:hover,
            &:focus {
                background-color: $rbtv-color-text-highlight;
                color: $rbtv-color-text-dark;
            }

            &:active,
            &.active {
                background-color: $rbtv-color-blue;
                color: $rbtv-color-text-highlight;
            }
            &:active {
                transform: scale(.975);
            }

        }
    }
    
    &.btn-danger {

        line-height: 1;
        background-color: $rbtv-color-red;
        padding: ($input-btn-padding-y*1.5) ($input-btn-padding-x*1.5);
        
        @include media-breakpoint-down(sm) {
            padding: ($input-btn-padding-y*2) ($input-btn-padding-x*2);
        }

        &:active,
        &.active,
        &:focus,
        &.focus {
            box-shadow: none !important;
        }

        &:not([disabled]):not(.disabled):not(.swiper-button-disabled) {

            &:hover,
            &:focus {
                background-color: $rbtv-color-text-highlight;
                color: $rbtv-color-text-dark;
            }

            &:active,
            &.active {
                background-color: $rbtv-color-red;
                color: $rbtv-color-text-highlight;
            }
            &:active {
                transform: scale(.975);
            }

        }
    }

    &.btn-secondary {
        line-height: 1;
        color: $rbtv-color-text;
        background-color: $rbtv-color-darkgrey;
        box-shadow: none !important;

        padding: ($input-btn-padding-y*1.5) ($input-btn-padding-x*1.5);
        
        @include media-breakpoint-down(sm) {
            padding: ($input-btn-padding-y*2) ($input-btn-padding-x*2);
        }

        &:not([disabled]):not(.disabled):not(.swiper-button-disabled) {
        
            &:hover,
            &:focus {
                // transform: translateY(-1px);
                color: $rbtv-color-black;
                box-shadow: none !important;
                background-color: $rbtv-color-text-highlight;
            }

            &:active,
            &.active {
                // background-color: $rbtv-color-darkgrey;
                background-color: $rbtv-color-blue;
                // transform: translateY(0px);
                color: $rbtv-color-text-highlight;
                box-shadow: none !important;
            }

            &:active {
                transform: scale(.975);
            }
        }
    }

    &.btn-iconOnly {

        display: inline-block;
        
        line-height: 1;
        color: $rbtv-color-text;        
        justify-content: center;
        text-align: center;
        
        // transition: transform ($rbtv-animationDuration / 2), background-color ($rbtv-animationDuration / 2), color ($rbtv-animationDuration / 2);
        transition: transform ($rbtv-animationDuration / 2);
        
        @include media-breakpoint-down(sm) {
            padding: ($input-btn-padding-y*2) ($input-btn-padding-x*1.5);
        }

        &.onActive {
            color: $rbtv-color-blue-light;
        }



        > .rbtv-icon,
        > rbtv-interaction-indicator {
            display: inline-block;
            // margin: 0 auto;
        }

        &:active,
        &.active,
        &:focus,
        &.focus {
            box-shadow: none !important;
        }

        &:not([disabled]):not(.disabled):not(.swiper-button-disabled) {

            &:hover,
            &:focus,
            &:active {
                color: $rbtv-color-black;
                background-color: $rbtv-color-text-highlight;

                svg {
                    fill: $rbtv-color-black;
                }
            }

            &:active {
                transform: scale(.975);

                // background-color: $rbtv-color-darkgrey;
                // color: $rbtv-color-text-highlight;
            }

            &.active,
            &:active {
                background-color: $rbtv-color-blue;
                color: $rbtv-color-text-highlight;

                svg {
                    fill: $rbtv-color-text-highlight;
                }
            }
        }
    }

    &.btn-textOnly {
        font-family: $rbtv-font-primary;
        color: $rbtv-color-button-default;
        font-weight: normal;
        box-shadow: none !important;
        padding: 0;
        min-height: $spacer*1.5;

        &:hover,
        &:focus {
            color: $rbtv-color-text-highlight;
            span {
                text-decoration: underline;
            }
        }

        &:active {
            color: $rbtv-color-yellow;
        }
    }

    &.btn-noxpadding {
        padding-left: 0 !important;
        padding-right: 0 !important;
    }

    &.btn-switch {

        line-height: 1;
        color: $rbtv-color-text;
        background-color: $rbtv-color-dark;
        box-shadow: none !important;
        border-radius: 0;
        display: block;

        width: 25%;

        @include media-breakpoint-down(md) {
            width: 35%;
        }
        @include media-breakpoint-down(sm) {
            width: 50%;
        }


        &.switch {

            &__first {
                border-top-left-radius: $rbtv-borderRadius-small;
                border-bottom-left-radius: $rbtv-borderRadius-small;
            }

            &__last {
                border-top-right-radius: $rbtv-borderRadius-small;
                border-bottom-right-radius: $rbtv-borderRadius-small;
            }
        }

        &:not([disabled]):not(.disabled):not(.swiper-button-disabled) {

            cursor: pointer;
        
            &:hover {
                // transform: translateY(-1px);
                color: $rbtv-color-black;
                box-shadow: none !important;
                background-color: $rbtv-color-text-highlight;
            }

            &:active,
            &.active {
                background-color: $rbtv-color-blue;
                // transform: translateY(0px);
                color: $rbtv-color-text-highlight;
                box-shadow: none !important;
            }

            &:active {
                transform: scale(.975);
            }
        }

    }


    &.btn-block {
        justify-content: center;
    }

    &.btn-sm {
        @include fontSize($rbtv-fontSize-small);
    }
    


    &.clickAnimation {

        position: relative;
        overflow: hidden;
        box-shadow: inset 0 0 0 0 $rbtv-color-blue;
        transition: transform ($rbtv-animationDuration / 2), background-color $rbtv-animationDuration, color $rbtv-animationDuration, box-shadow $rbtv-animationDuration;

        &::before
        {
            content: '';
            position: absolute;
            bottom: 0;
            right: 0;
            top: 0;
            left: 0;
            z-index: -1;
            transition: transform $rbtv-animationDuration;
            transition-timing-function: cubic-bezier(0.75, 0, 0.125, 1);
            
            background-color: $rbtv-color-blue;
        }

        &:hover,
        &.active {
            color: $rbtv-color-text-highlight !important;
            box-shadow: inset 0 0 0 1px $rbtv-color-blue;
        }

        &__x {
            &::before,
            &::after {
                transform: translateX(-100%);
            }

            &:hover,
            &.active {
                &::before,
                &::after {
                    transform: translateX(0%);
                }
            }
        }

        &__y {
            &::before,
            &::after {
                transform: translateY(-100%);
            }

            &:hover,
            &.active {
                &::before,
                &::after {
                    transform: translateY(0%);
                }
            }
        }

    }

    &.btn-bottomRightCorner {

        position: fixed;
        bottom: 4vw;
        right: 4vw;
        // box-shadow: none !important;
        box-shadow: $rbtv-overlay-boxshadow;
        

        z-index: 500;

        border-radius: 50% !important;
        width: 4rem;
        height: 4rem;
        overflow: hidden;

        display: flex;
        justify-content: center;
        align-items: center;

        // background-color: $rbtv-color-darkgrey;
        background-color: $rbtv-color-darkestgrey;
        color: $rbtv-color-text;

        cursor: pointer;

        @include media-breakpoint-up(sm) {
            bottom: 2vw;
            right: 2vw; 
            width: 3.5rem;
            height: 3.5rem;
        }
        @include media-breakpoint-up(lg) {
            bottom: 1.5vw;
            right: 1.5vw; 
        }

        &:hover {
            background-color: $rbtv-color-text-highlight;
            color: $rbtv-color-black;
        }

        &:active {
            transform: scale(.975);
            background-color: $rbtv-color-darkgrey;
            color: $rbtv-color-text-highlight;
        }

        > .rbtv-icon {
            @include fontSize($rbtv-fontSize-large*1.5);
            // padding-bottom: ($rbtv-fontSize-large/5);
        }

        &.btn-showStream {
            background-color: $rbtv-color-button-default;
            color: $rbtv-color-dark;

            &:hover {
                background-color: $rbtv-color-text-highlight;
                color: $rbtv-color-text-dark;
            }

            &:active,
            &.active {
                background-color: $rbtv-color-blue;
                color: $rbtv-color-text-highlight;
            }
        }
    }

    &.btn-brand {
    
        line-height: 1;
        background-color: transparent;
        // padding: ($input-btn-padding-y*1.5) ($input-btn-padding-x*1.5);
        padding: 0;
        align-items: stretch;
        justify-content: stretch;
        transition: transform ($rbtv-animationDuration / 2);
        
        // @include media-breakpoint-down(sm) {
        //     padding: ($input-btn-padding-y*2) ($input-btn-padding-x*2);
        // }

        &:active,
        &.active,
        &:focus,
        &.focus {
            box-shadow: none !important;
        }

        &:not([disabled]):not(.disabled) {

            &:hover {
                background-color: $rbtv-color-text-highlight;
                background-color: transparent;
                color: $rbtv-color-text-dark;
            }

            &:active,
            &.active {
                background-color: $rbtv-color-darkestgrey;
                color: $rbtv-color-text-highlight;
            }

        }

        justify-content: flex-start;

        .icon {

            // color: $rbtv-color-button-default;
            color: $rbtv-color-text-highlight;

            padding: ($spacer/4) $spacer;
            width: $spacer*4;
            overflow: hidden;

            transition: background-color $rbtv-animationDuration/2, color $rbtv-animationDuration/2;

            @include media-breakpoint-down(sm) {
                padding: ($spacer/4) $spacer/2;
            }

            img,
            .rbtv-icon {
                width: $spacer*3;
                height: $spacer*3;
                line-height: $spacer*3;
                font-size: $spacer*2;
            }
        }

        .label {
            background-color: $rbtv-color-button-default;
            padding: $spacer;
            // text-align: center;
            flex: 1;
            display: flex;
            justify-content: center;
            align-items: center;
            transition: background-color $rbtv-animationDuration/2;
            
            // @include media-breakpoint-down(sm) {
            //     padding: $spacer/2;
            // }
        }

        &:hover {
            .icon {
                background-color: transparent;

                color: $rbtv-color-black;
                // img {
                //     filter: invert(1);
                // }
            }
            .label {
                background-color: $rbtv-color-text-highlight;
            }
        }

        &:active {
            transform: scale(.975);

            .icon {
                background-color: transparent;
                color: $rbtv-color-button-default;
                // img {
                //     filter: none;
                // }
            }
            .label {
                background-color: $rbtv-color-darkestgrey;
            }
        }

        &.secondary {
            color: $rbtv-color-button-default;
            
            .label {
                background-color: $rbtv-color-darkgrey;
                
            }

            &:hover {
                .icon {
                    background-color: transparent;
                    // img {
                    //     filter: invert(1);
                    // }
                }
                .label {
                    background-color: $rbtv-color-text-highlight;
                }
            }
    
            &:active {
                .icon {
                    background-color: transparent;
                    img {
                        filter: none;
                    }
                }
                .label {
                    background-color: $rbtv-color-darkestgrey;
                }
            }
        }

        &.brand-google {
            .icon {
                background-color: $rbtv-color-brand-google;
            }
        }

        &.brand-twitch {
            .icon {
                background-color: $rbtv-color-brand-twitch;
            }
            
        }
        &.brand-reddit {
            .icon {
                background-color: $rbtv-color-brand-reddit;
            }
        }
        &.brand-steam {
            .icon {
                background-color: $rbtv-color-brand-steam;
            }
        }

        &.brand-applepodcasts {
            .icon {
                background-color: $rbtv-color-brand-applepodcasts;
            }
        }

        &.brand-spotify {
            .icon {
                background-color: $rbtv-color-brand-spotify;
            }
        }

        &.brand-xml {
            .icon {
                background-color: $rbtv-color-red;
            }
        }

        &.brand-google,
        &.brand-twitch,
        &.brand-reddit,
        &.brand-steam,
        &.brand-applepodcasts,
        &.brand-spotify,
        &.brand-xml {
            &:hover {
                .icon {
                    background-color: $rbtv-color-text-highlight;
                    background-image: none;
                }
            }
            &:active {
                .icon {
                    background-color: transparent;
                }
            }
        }
    }
}



/* Nav List */

.nav-list {
    display: flex;
    flex-direction: column;

    overflow: hidden;
    border-radius: $rbtv-borderRadius-small;
    background-color: $rbtv-color-darkestgrey;

    .btn {
        &.nav-list-item {
            border-radius: 0;
            padding: $spacer $grid-gutter-width;

            font-family: $rbtv-font-primary;
            font-weight: normal;
            text-align: left;

            
            @include media-breakpoint-down(md) {
                padding: $spacer $grid-gutter-width/2;
            }

            &:not([disabled]):not(.disabled):not(.swiper-button-disabled) {
                background-color: transparent;
                color: $rbtv-color-button-default;

                &:hover,
                &:focus {
                    background-color: $rbtv-color-text-highlight;
                    color: $rbtv-color-black;
                }
                &:active,
                &.active {
                    background-color: $rbtv-color-blue;
                    color: $rbtv-color-text-highlight;
                }
            }
        }

    }
}


.site-header {
    // position: fixed;
    // top: 0;
    width: 100%;
    z-index: 100;
    margin-bottom: $spacer;

    border-bottom-left-radius: $rbtv-borderRadius;
    border-bottom-right-radius: $rbtv-borderRadius;

    // .container {
    //     width: 70%;
    // }

    #rbtvlogo {
        width: 40px;
        height: 40px;
        display: block;
        margin: 0;
        padding: 0;
        background: url($cornerbug-image) no-repeat center center;
        background-size: contain;
    }

    .navbar {
        display: flex;
        justify-content: flex-start;
    }

    .navbar-nav {
        flex-direction: row;
        margin: 0;
    }
}

.mobile-view {
    .site-header {
        display: none;
    }
}



// CUSTOM ELEMENTS

.page-header {

    h1.box-title {
        @include fontSize($rbtv-fontSize-large*1.25);

        a:link,
        a:visited {
            color: $rbtv-color-text-highlight;
        }
    }
}



//// DISCOURSE OVERRIDES


.wrap {
	background-color: $rbtv-color-darkBG;
	padding-left: $grid-gutter-width;
    padding-right: $grid-gutter-width;
    width: 100%;
    max-width: 1200px;

    &.bg-transparent {
        background-color: transparent;
    }

    @media screen and (max-width: 767px) {
        padding-left: $grid-gutter-width/2;
        padding-right: $grid-gutter-width/2;
    }
}

.d-header {
	background-color: transparent;
    box-shadow: none;
    // padding-top: 0;
    // position: fixed;

    // z-index: 1000;

    border-bottom-left-radius: $rbtv-borderRadius;
    border-bottom-right-radius: $rbtv-borderRadius;

    // pointer-events: none;

    .wrap {
        // background-color: transparent;

        // display: flex;

        // justify-content: flex-end;

        // .content {
        //     width: 30%;
        // }

        // .contents {
        //     display: flex;
        //     align-items: center;
        //     justify-content: space-between;

        //     .title {
        //         flex: 1;
        //     }
        // }
    }

    .title {
        // display: none;
        margin-right: $spacer;
    }

    // .panel {
    //     pointer-events: all;
    // }
}

.docked {
    .d-header {
        padding-top: 0;
        // margin-top: calc(60px + #{$spacer}/2);
    }
}


#main-outlet {
    // padding-top: calc(4.2857em + #{$spacer} );
    // margin-top: calc(60px + #{$spacer}/2);

    border-top-left-radius: $rbtv-borderRadius;
    border-top-right-radius: $rbtv-borderRadius;
}


ul#navigation-bar {
    display: flex;
    align-items: center;

    span.unread {
        display: none;
    }
}



.nav-pills {
    & > li {
        & > a {
            @include fontSize($rbtv-fontSize-medium);
        }
    }
}

/** TYPO **/

.badge-wrapper {
    font-weight: 500;
}


/** CATEGORIES **/

.category-list {

    .category-list-item {
        border-top: 0;
    }
    tbody {
                
        .category {

            .category-title-link {
                display: flex;
                align-items: flex-start;
                justify-content: flex-start;

                .category-text-title {
                    margin-right: $spacer;
                }
            }

            h3 a[href] {
                color: $rbtv-color-button-default;


                &:hover,
                &:focus {
                    color: $rbtv-color-text-highlight;
                }

                &:active {
                    color: $rbtv-color-yellow;
                }
            }
            .category-description {
                @include fontSize($rbtv-fontSize-mediumsmall);
            }

            .category-logo {
                margin-bottom: 0;
            }
        }

    }

    .topics {
        width: 20%;
    }
}



/** Tables **/

table {
    tbody {
        tr {
            border-bottom: 0;

            &:nth-of-type(odd) {
                background-color: darken($rbtv-color-darkestgrey, 7.5%);
            }
            
        }
    }
}

.list-cell, .table-heading, .category-list td, .category-list th {
    padding-left: 10px;
    padding-right: 10px;
}





/** Latest Topic List, Frontpage **/
.latest-topic-list {

    .latest-topic-list-item {
        .main-link {
            
        }
    }
    
}


/** Topics List, Category **/

.topic-list {
    th {
        padding-top: $spacer;
        padding-bottom: $spacer;
    }

    td {
        padding-top: $spacer*1.5;
        padding-bottom: $spacer*1.5;
    }
}

.topic-list-main-link, .topic-list .main-link, .latest-topic-list-item .main-link {
    @include fontSize($rbtv-fontSize-medium);
}


/** Single Topic **/

#topic {

    .topic-post {

        margin-bottom: $spacer;

        .row {
            display: flex;
            align-items: flex-start;
        }

        .topic-avatar,
        .topic-body {
            border-top: 0;
        }

        .topic-body {
            background-color: darken($rbtv-color-darkestgrey, 7.5%);
        }

        .topic-avatar {
            padding-left: $spacer/2;
            padding-right: $spacer/2;

            .avatar {
                max-width: 100%;
                height: auto;
            }
        }
    } 

    .small-action {
        border: 0;
    }
}


.mobile-view {

    .category-list {

        .category-list-item {
            &:nth-child(odd) {
                background-color: darken($rbtv-color-darkestgrey, 7.5%);
            }
        }

    }


    #topic {

        .topic-post {

            .row {
                display: block;
            }
    
            .topic-body {
                background-color: transparent;
            }
    
        } 

    }
}

#user-card, #group-card {
    box-shadow: $rbtv-overlay-boxshadow;
}


.d-header-icons > li {
    margin-left: $spacer;
}



/** USER PROFILE **/

.stats-title {
    text-transform: none;
}


.extra-info-wrapper .topic-link {
    @include fontSize($rbtv-fontSize-mediumlarge);
}



.topic-body {
    width: 690px;

    
    @media all and (min-width: 1250px) {
        width: 790px;
    }
}

.mobile-view {
    .topic-body {
        width: auto;
    }
}

.timeline-container {
    margin-left: 725px;

    @media all and (min-width: 1140px) {
        margin-left: 850px;
    }
    @media all and (min-width: 1250px) {
        margin-left: 900px;
    }
}


footer.rbtv-footer {
    width: 100%;
    padding: $grid-gutter-width $grid-gutter-width;
    text-align: center;
}